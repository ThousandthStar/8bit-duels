use crate::{tilemap::TileSize, animations::{MovementAnimation, AttackAnimation}};
use bevy::prelude::*;

pub struct OwnershipIndicatorPlugin;

impl Plugin for OwnershipIndicatorPlugin {
    fn build(&self, app: &mut App) {
        app.add_system_set();
    }
}

// marker component
#[derive(Component)]
pub struct OwnershipIndicator;

fn update(
    mut card_entity_q: Query<(&Children, Option<&MovementAnimation, Option<&AttackAnimation), With<CardEntity>>,
    mut ownership_indicators: Query<(Entity, &mut Visibility), (Without<CardEntity>, With<OwnershipIndicator>>,
){
    
    for (entity, mut visibility) in ownership_indicators.iter_mut(){

    }
}
